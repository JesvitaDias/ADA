#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int graph[MAX][MAX];
int inDegree[MAX];
int stack[MAX];
int top = -1;
int vertices;

void topologicalSort() {
    for (int i = 0; i < vertices; i++) {
        if (inDegree[i] == 0) {
            stack[++top] = i;
        }
    }

    printf("Topological Sort Order:\n");

    while (top >= 0) {
        int v = stack[top--];
        printf("%d ", v);

        for (int i = 0; i < vertices; i++) {
            if (graph[v][i] == 1) {
                inDegree[i]--;
                if (inDegree[i] == 0) {
                    stack[++top] = i;
                }
            }
        }
    }
    printf("\n");
}

int main() {
    int edges, u, v;

    printf("Enter number of vertices: ");
    scanf("%d", &vertices);

    printf("Enter number of edges: ");
    scanf("%d", &edges);

    for (int i = 0; i < vertices; i++) {
        inDegree[i] = 0;
        for (int j = 0; j < vertices; j++) {
            graph[i][j] = 0;
        }
    }

    printf("Enter edges (from to):\n");
    for (int i = 0; i < edges; i++) {
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;
        inDegree[v]++;
    }

    topologicalSort();

    return 0;
}
